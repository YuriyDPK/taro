"use client";

import { useState, useEffect } from "react";
import { Button } from "@/shared/ui/button";
import { DonationBlock } from "./DonationBlock";
import Link from "next/link";

interface PremiumModalProps {
  isOpen: boolean;
  onClose: () => void;
  type: "reading" | "message";
  getTimeLeft: () => number; // —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
}

export const PremiumModal = ({
  isOpen,
  onClose,
  type,
  getTimeLeft,
}: PremiumModalProps) => {
  const [timeLeft, setTimeLeft] = useState(0);
  const [formattedTime, setFormattedTime] = useState("0—Å");

  // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–∞–π–º–µ—Ä –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É
  useEffect(() => {
    if (!isOpen) return;

    const updateTimer = () => {
      const time = getTimeLeft();
      setTimeLeft(time);

      // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –≤—Ä–µ–º—è
      const minutes = Math.floor(time / 60000);
      const seconds = Math.floor((time % 60000) / 1000);

      if (minutes > 0) {
        setFormattedTime(`${minutes}:${seconds.toString().padStart(2, "0")}`);
      } else {
        setFormattedTime(`${seconds}—Å`);
      }
    };

    updateTimer(); // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ä–∞–∑—É
    const interval = setInterval(updateTimer, 1000);

    return () => clearInterval(interval);
  }, [isOpen, getTimeLeft]);

  if (!isOpen) return null;

  const isReading = type === "reading";

  // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ –º–æ–¥–∞–ª–∫–∏
  const handleBackdropClick = (e: React.MouseEvent) => {
    if (e.target === e.currentTarget) {
      onClose();
    }
  };

  return (
    <div
      className="fixed inset-0 z-50 bg-black/70 backdrop-blur-sm flex items-center justify-center p-4"
      onClick={handleBackdropClick}
    >
      <div className="bg-black/90 h-[80vh] overflow-y-auto border border-purple-400/30 rounded-lg max-w-md w-full p-6 animate-fadeIn relative">
        {/* –ö—Ä–µ—Å—Ç–∏–∫ –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è */}
        <button
          onClick={onClose}
          className="absolute top-4 right-4 text-white/70 hover:text-white transition-colors z-10 cursor-pointer"
        >
          <svg
            className="w-6 h-6"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
          >
            <path
              strokeLinecap="round"
              strokeLinejoin="round"
              strokeWidth={2}
              d="M6 18L18 6M6 6l12 12"
            />
          </svg>
        </button>

        <div className="text-center mb-6">
          <div className="text-4xl mb-4">{timeLeft > 0 ? "‚è∞" : "‚ú®"}</div>
          <h2 className="text-2xl font-medium text-white mb-2">
            {timeLeft > 0
              ? isReading
                ? "–õ–∏–º–∏—Ç —Ä–∞—Å–∫–ª–∞–¥–æ–≤ –∏—Å—á–µ—Ä–ø–∞–Ω"
                : "–õ–∏–º–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–π –∏—Å—á–µ—Ä–ø–∞–Ω"
              : "Premium –¥–æ—Å—Ç—É–ø"}
          </h2>
          <p className="text-white/70 text-sm">
            {timeLeft > 0
              ? isReading
                ? `–°–ª–µ–¥—É—é—â–∏–π —Ä–∞—Å–∫–ª–∞–¥ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ ${formattedTime}`
                : `–°–ª–µ–¥—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ —á–µ—Ä–µ–∑ ${formattedTime}`
              : "–ü–æ–ª—É—á–∏—Ç–µ –Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—è–º"}
          </p>
          {timeLeft > 0 && (
            <div className="mt-2 text-purple-300 text-xs">
              –¢–∞–π–º–µ—Ä –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
            </div>
          )}
        </div>

        <div className="space-y-6">
          <div className="bg-gradient-to-r from-purple-600/20 to-indigo-600/20 border border-purple-400/30 rounded-lg p-4">
            <h3 className="text-lg font-medium text-white mb-3 flex items-center">
              ‚ú® Premium –¥–æ—Å—Ç—É–ø
            </h3>
            <div className="space-y-2 text-sm text-white/80">
              <div className="flex items-center">
                <span className="text-green-400 mr-2">‚úì</span>
                –ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–µ —Ä–∞—Å–∫–ª–∞–¥—ã
              </div>
              <div className="flex items-center">
                <span className="text-green-400 mr-2">‚úì</span>
                –ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
              </div>
              <div className="flex items-center">
                <span className="text-green-400 mr-2">‚úì</span>
                –≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ —Ä–∞—Å–∫–ª–∞–¥—ã
              </div>
              <div className="flex items-center">
                <span className="text-green-400 mr-2">‚úì</span>
                –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞
              </div>
            </div>
          </div>

          {/* –ö–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –ø—Ä–µ–º–∏—É–º—É */}
          <div className="text-center">
            <Link href="/premium">
              <Button
                onClick={onClose}
                className="w-full bg-gradient-to-r from-purple-600 to-indigo-600 hover:from-purple-500 hover:to-indigo-500 text-white font-medium mb-4"
              >
                üîÆ –í—ã–±—Ä–∞—Ç—å —Ç–∞—Ä–∏—Ñ Premium
              </Button>
            </Link>
            <p className="text-purple-300 text-sm mb-4">
              –ò–ª–∏ –ø–æ–¥–¥–µ—Ä–∂–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç –ª—é–±–æ–π —Å—É–º–º–æ–π
            </p>
            <DonationBlock className="" />
          </div>

          <div className="text-center text-xs text-white/50">
            –ü–æ—Å–ª–µ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ Premium
          </div>
        </div>

        <div className="flex gap-3 mt-6">
          <Button
            onClick={onClose}
            className="flex-1 bg-white/10 hover:bg-white/20 border border-white/20"
            size="sm"
          >
            –ü–æ–¥–æ–∂–¥–∞—Ç—å
          </Button>
          <Button
            onClick={() => {
              // TODO: –î–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ Premium
              onClose();
            }}
            className="flex-1 bg-gradient-to-r from-purple-600 to-indigo-600 hover:from-purple-500 hover:to-indigo-500"
            size="sm"
          >
            –£ –º–µ–Ω—è Premium
          </Button>
        </div>
      </div>
    </div>
  );
};
